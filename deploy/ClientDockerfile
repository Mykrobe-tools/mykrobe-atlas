FROM ubuntu:18.04
MAINTAINER Mark Thomsit <mark@makeandship.com>

RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Arguments
ARG NODE_ENV
ENV NODE_ENV=$NODE_ENV
ARG HOST
ENV HOST=$HOST
ARG PORT
ENV PORT=$PORT
ARG DEBUG_PRODUCTION
ENV DEBUG_PRODUCTION=$DEBUG_PRODUCTION
ARG API_DEBUG
ENV API_DEBUG=$API_DEBUG
ARG ATLAS_APP
ENV ATLAS_APP=$ATLAS_APP
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ARG REACT_APP_TOKEN_STORAGE_KEY
ENV REACT_APP_TOKEN_STORAGE_KEY=$REACT_APP_TOKEN_STORAGE_KEY
ARG REACT_APP_API_SPEC_URL
ENV REACT_APP_API_SPEC_URL=$REACT_APP_API_SPEC_URL
ARG REACT_APP_GOOGLE_MAPS_API_KEY
ENV REACT_APP_GOOGLE_MAPS_API_KEY=$REACT_APP_GOOGLE_MAPS_API_KEY
ARG REACT_APP_BOX_CLIENT_ID
ENV REACT_APP_BOX_CLIENT_ID=$REACT_APP_BOX_CLIENT_ID
ARG REACT_APP_DROPBOX_APP_KEY
ENV REACT_APP_DROPBOX_APP_KEY=$REACT_APP_DROPBOX_APP_KEY
ARG REACT_APP_GOOGLE_DRIVE_CLIENT_ID
ENV REACT_APP_GOOGLE_DRIVE_CLIENT_ID=$REACT_APP_GOOGLE_DRIVE_CLIENT_ID
ARG REACT_APP_GOOGLE_DRIVE_REACT_APP_GOOGLE_DRIVE_DEVELOPER_KEY
ENV REACT_APP_GOOGLE_DRIVE_REACT_APP_GOOGLE_DRIVE_DEVELOPER_KEY=$REACT_APP_GOOGLE_DRIVE_REACT_APP_GOOGLE_DRIVE_DEVELOPER_KEY
ARG REACT_APP_ONEDRIVE_CLIENT_ID
ENV REACT_APP_ONEDRIVE_CLIENT_ID=$REACT_APP_ONEDRIVE_CLIENT_ID
ARG REACT_APP_KEYCLOAK_URL
ENV REACT_APP_KEYCLOAK_URL=$REACT_APP_KEYCLOAK_URL
ARG REACT_APP_KEYCLOAK_REALM
ENV REACT_APP_KEYCLOAK_REALM=$REACT_APP_KEYCLOAK_REALM
ARG REACT_APP_KEYCLOAK_CLIENT_ID
ENV REACT_APP_KEYCLOAK_CLIENT_ID=$REACT_APP_KEYCLOAK_CLIENT_ID

ENV NODE_VERSION 8.12.0
ENV NVM_DIR /usr/local/nvm

# install required software before using nvm/node/npm/bower
RUN apt-get update
RUN apt-get install -y curl
RUN apt-get install -y git
RUN apt-get install -y python
RUN apt-get install -y build-essential
RUN apt-get install -y imagemagick
RUN apt-get install -y libssl-dev
RUN apt-get install -y apt-transport-https

# download and install nvm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default

ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/v$NODE_VERSION/bin:$PATH

RUN echo $REACT_APP_API_URL > api-url.check
RUN echo $REACT_APP_API_SPEC_URL > api-swagger-url.check
RUN echo $REACT_APP_TOKEN_STORAGE_KEY > auth-cookie-name.check

# Add the keys and set permissions
RUN mkdir -p /root/.ssh && \
    chmod 0700 /root/.ssh && \
    echo "IdentityFile /root/.ssh/bitbucket-readonly" >> /root/.ssh/config

ADD bitbucket-readonly /root/.ssh/
ADD atlas-jsonschema-readonly /root/.ssh/

RUN chmod 600 /root/.ssh/bitbucket-readonly && \
    ssh-keyscan bitbucket.org >> /root/.ssh/known_hosts && \
    ssh-keyscan github.com >> /root/.ssh/known_hosts

# install yarn
RUN npm install -g yarn

# server installation directory
RUN mkdir /app

# push this app to the deployment directory
WORKDIR /app
ADD . /app

# install app dependencies including devDependencies as building
RUN cat /root/.ssh/atlas-jsonschema-readonly > /etc/ssh/id_rsa && \
    chmod 600 /etc/ssh/id_rsa && \
    eval $(ssh-agent -s) && \
    ssh-add /etc/ssh/id_rsa && \
    cd /app && \
    yarn install --production=false

# Remove SSH keys
RUN rm /app/bitbucket-readonly
RUN rm -rf /root/.ssh
RUN rm /etc/ssh/id_rsa

# run app on 3000
EXPOSE 3000

# rebuild sass with current npm
RUN npm rebuild node-sass
RUN yarn web-build
RUN yarn web-build-server-compile
RUN cp -r web/build/static web/dist/

# remove devDependencies
RUN rm -rf /app/node_modules

# dependencies for the web server
RUN cd /app/web && yarn install

# run up the server
CMD NODE_ENV=$NODE_ENV yarn web-build-server-start