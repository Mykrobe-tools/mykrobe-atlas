upstream atlas {
	server localhost:3000;
}

upstream api-atlas {
	server localhost:3001;
}

server {
	listen 80;
	server_name atlas-uat.makeandship.com;

	location /.well-known/acme-challenge {
		root /var/www/letsencrypt;
	}

	return  301 https://$host$request_uri;
}

server {
	listen 80;
	server_name api.atlas-uat.makeandship.com;

	location /.well-known/acme-challenge {
		root /var/www/letsencrypt;
	}

	return  301 https://$host$request_uri;

}

server {
	listen 443 ssl default;
	server_name atlas-uat.makeandship.com;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/atlas-uat.makeandship.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/atlas-uat.makeandship.com/privkey.pem;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:DES-CBC3-SHA:AES128-SHA:AES128-GCM-SHA256';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;

 	location / {
		proxy_pass  http://atlas;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	access_log /var/log/_atlas_access.log;
	error_log /var/log/_atlas_error.log;
}

server {
	listen 443 ssl;
	server_name api.atlas-uat.makeandship.com;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/atlas-uat.makeandship.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/atlas-uat.makeandship.com/privkey.pem;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:DES-CBC3-SHA:AES128-SHA:AES128-GCM-SHA256';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;

 	location / {
		proxy_pass  http://api-atlas;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	access_log /var/log/_atlas_api_access.log;
	error_log /var/log/_atlas_api_error.log;
}